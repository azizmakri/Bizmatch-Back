version: '3'
services:

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=bizmatch
    volumes:
      - BizmatchVolume:/var/lib/mysql
    ports:
      - "3306:3306"

  eureka:
    build:
      context: ../EurekaServer
      dockerfile: DockerFileEureka
    image: eureka-image
    restart: always
    container_name: eureka
    ports:
      - "8761:8761"

  gateway:
    build:
      context: ../API_Gateway
      dockerfile: DockerFileGateway
    container_name: gateway
    image: api-gateway-image
    restart: always
    depends_on:
      - eureka
    ports:
      - "8083:8083"

    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:4200
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[0]=GET
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[1]=POST
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[2]=PUT
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[3]=DELETE
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[4]=OPTIONS
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

      # Routes Configuration
      - spring.cloud.gateway.routes[0].id=gestionUser
      - spring.cloud.gateway.routes[0].uri=lb://gestionUser
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
      # Continue for each route. For instance, for the next route (gestionAuth):
      - spring.cloud.gateway.routes[1].id=gestionAuth
      - spring.cloud.gateway.routes[1].uri=lb://gestionAuth
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/**

      # gestionPartenairesPotentiels Route Configuration
      - spring.cloud.gateway.routes[2].id=gestionPartenairesPotentiels
      - spring.cloud.gateway.routes[2].uri=lb://gestionPartenairesPotentiels
      - spring.cloud.gateway.routes[2].predicates[0]=Path=/partenairesPotentiels/**

      # gestionOpportuniteCollaboration Route Configuration
      - spring.cloud.gateway.routes[3].id=gestionOpportuniteCollaboration
      - spring.cloud.gateway.routes[3].uri=lb://gestionOpportuniteCollaboration
      - spring.cloud.gateway.routes[3].predicates[0]=Path=/opportuniteCollaboration/**

      # evenement Route Configuration
      - spring.cloud.gateway.routes[4].id=evenement
      - spring.cloud.gateway.routes[4].uri=lb://evenement
      - spring.cloud.gateway.routes[4].predicates[0]=Path=/gestionEventConf/**

      # gestionReunion Route Configuration
      #- spring.cloud.gateway.routes[5].id=gestionReunion
      #- spring.cloud.gateway.routes[5].uri=lb://gestionReunion
      #- spring.cloud.gateway.routes[5].predicates[0]=Path=/reunion/**

      # prestationService Route Configuration
      - spring.cloud.gateway.routes[6].id=prestationService
      - spring.cloud.gateway.routes[6].uri=lb://prestationService
      - spring.cloud.gateway.routes[6].predicates[0]=Path=/prestationservice/**

      # gestionDecouverteMarche Route Configuration
      - spring.cloud.gateway.routes[7].id=gestionDecouverteMarche
      - spring.cloud.gateway.routes[7].uri=lb://gestionDecouverteMarche
      - spring.cloud.gateway.routes[7].predicates[0]=Path=/Marche/**

      # gestionBesoinMarche Route Configuration
      - spring.cloud.gateway.routes[8].id=gestionBesoinMarche
      - spring.cloud.gateway.routes[8].uri=lb://gestionBesoinMarche
      - spring.cloud.gateway.routes[8].predicates[0]=Path=/besoinMarche/**

      # GestionDeveloppementBusiness Route Configuration
      - spring.cloud.gateway.routes[9].id=GestionDeveloppementBusiness
      - spring.cloud.gateway.routes[9].uri=lb://GestionDeveloppementBusiness
      - spring.cloud.gateway.routes[9].predicates[0]=Path=/DevBusiness/**

      # GestionPenetrationMarche Route Configuration
      - spring.cloud.gateway.routes[10].id=GestionPenetrationMarche
      - spring.cloud.gateway.routes[10].uri=lb://GestionPenetrationMarche
      - spring.cloud.gateway.routes[10].predicates[0]=Path=/marketing/**

      # paymentMs Route Configuration
      - spring.cloud.gateway.routes[11].id=paymentMs
      - spring.cloud.gateway.routes[11].uri=lb://paymentMs
      - spring.cloud.gateway.routes[11].predicates[0]=Path=/api/**

      # GestionCRM Route Configuration
      - spring.cloud.gateway.routes[12].id=GestionCRM
      - spring.cloud.gateway.routes[12].uri=lb://GestionCRM
      - spring.cloud.gateway.routes[12].predicates[0]=Path=/formulaires/**


  BesoinMarche:
    build:
      context: ../BesoinMarche
      dockerfile: DockerFileBesoinMarche
    container_name: besoinmarche
    image: besoinmarcheimage
    restart: always
    ports:
      - "9009:9009"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver


  Event:
    build:
      context: ../BizMatch_GestionEvenement_Conference
      dockerfile: DockerFileEvent
    container_name: event
    image: event-image
    restart: always
    ports:
      - "9004:9004"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver

  Crm:
    build:
      context: ../BizMatch_GestionEvenement_Conference
      dockerfile: DockerFileCrm
    container_name: crm
    image: crm-image
    restart: always
    ports:
      - "9014:9014"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver


  DecouverteMarche:
    build:
      context: ../DecouverteMarche
      dockerfile: DockerFileMarche
    container_name: decouvertemarch
    image: marche-image
    restart: always
    ports:
      - "9008:9008"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver


  DevBusiness:
    build:
      context: ../Developpement Business
      dockerfile: DockerFileDeveloppementBusiness
    container_name: dev-business
    image: dev-business-image
    restart: always
    ports:
      - "9010:9010"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
  Auth:
    build:
      context: ../gestionAuth
      dockerfile: DockerFileAuth
    container_name: auth
    image: auth-image
    restart: always
    ports:
      - "9001:9001"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver

  User:
    build:
      context: ../gestionUser
      dockerfile: DockerFileUser
    container_name: user
    image: user-image
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
  Collaboration:
    build:
      context: ../OpportuniteCollaboration
      dockerfile: DockerfileCollaboration
    container_name: collaboration
    image: collaboration-image
    restart: always
    ports:
      - "9002:9002"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver

  Partenaire:
    build:
      context: ../partenairesPotentiels
      dockerfile: DockerFilePartenaire
    container_name: partenaire
    image: partenaire-image
    restart: always
    ports:
      - "9003:9003"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver

  Payment:
    build:
      context: ../PaymentMs
      dockerfile: DockerFilePayment
    container_name: payment
    image: payment-image
    restart: always
    ports:
      - "9012:9012"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver



  Marketing:
    build:
      context: ../PenetrationMarketing
      dockerfile: DockerFilePenetrationMarketing
    container_name: marketing
    image: penetration-marketing-image
    restart: always
    ports:
      - "9011:9011"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver


  PrestationService:
    build:
      context: ../prestationService
      dockerfile: DockerFilePrestationService
    container_name: prestation-service
    image: prestation-service-image
    restart: always
    ports:
      - "9007:9007"
    depends_on:
      - mysql
      - eureka
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - eureka.instance.preferIpAddress=true
      - eureka.instance.leaseRenewalIntervalInSeconds=10
      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.datasource.url=jdbc:mysql://mysql:3306/bizmatch?createDatabaseIfNotExists=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.jpa.show-sql=true
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
volumes:
  BizmatchVolume: